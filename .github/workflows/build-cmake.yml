name: Build

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    name: ${{matrix.os}}
    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup enviroment (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install libudev-dev libx11-dev libxcursor-dev libxrandr-dev libgl1-mesa-dev libalut-dev libvorbis-dev libsndfile1-dev libsfml-dev

      - name: Setup clang (Windows)
        if: matrix.os == 'windows-latest'
        run: echo "PATH=$PATH:C:/msys64/mingw64/bin" >> $GITHUB_ENV

      - name: Setup Ninja (Windows)
        if: matrix.os == 'windows-latest'
        uses: seanmiddleditch/gha-setup-ninja@v4
        with:
          version: 1.11.1

      - name: Setup Ninja (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install ninja-build

      - name: Generate CMake cache
        run: cmake -S . -B target/release -Wno-dev -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build (Release)
        run: cmake --build target/release --config Release

      - name: Upload binaries (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: gomoku-windows
          path: target/release/gomoku.exe

      - name: Upload binaries (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: gomoku-ubuntu
          path: target/release/gomoku